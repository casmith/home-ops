---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app miniflux
  namespace: default
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: miniflux
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      miniflux:
        replicas: 2
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 17.4
            envFrom: &envFrom
              - secretRef:
                  name: miniflux-secret
        containers:
          app:
            image:
              repository: ghcr.io/miniflux/miniflux
              tag: 2.2.14
            env:
              BASE_URL: https://rss.kalde.in
              CREATE_ADMIN: "1"
              DEBUG: "1"
              LOG_DATE_TIME: "1"
              METRICS_ALLOWED_NETWORKS: "10.32.0.0/16"
              METRICS_COLLECTOR: "1"
              POLLING_SCHEDULER: entry_frequency
              POLLING_FREQUENCY: "15"
              RUN_MIGRATIONS: "1"
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthcheck
                    port: &port 8080
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                cpu: 10m
                memory: 100Mi
              limits:
                memory: 750Mi
    service:
      app:
        ports:
          http:
            port: *port
    serviceMonitor:
      app:
        enabled: true
        endpoints:
          - port: http
    route:
      app:
        hostnames: ["rss.kalde.in"]
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: *port
    topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: *app
